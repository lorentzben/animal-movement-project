source(".installpackages.R")
library(tidyverse)
library(amt)
library(sf)
library(lubridate)
library(ggplot2)
library(terra)
library(png)
vulture_metadata <- read.csv("../data/Black-Vultures-and-Turkey-Vultures-Southeastern-USA-reference-data.csv")
print(vulture_metadata)
vulture_dat <- read.csv("../data/Black-Vultures-and-Turkey-Vultures-Southeastern-USA.csv")
head(vulture_dat)
str(vulture_dat)
nrow(vulture_dat)
#vulture_dat
# tag id's 17 tags
sort(unique(vulture_dat$tag.local.identifier))
length(unique(vulture_dat$tag.local.identifier))
# individual bird id's 18 birds
sort(unique(vulture_dat$individual.local.identifier))
length(unique(vulture_dat$individual.local.identifier))
bird_ids <- unique(vulture_dat$individual.local.identifier)
record_table <- data.frame()
for(i in 1:length(bird_ids)){
current_bird <- bird_ids[i]
number_of_records <- sum(vulture_dat$individual.local.identifier == current_bird)
new_row <- c(current_bird,number_of_records)
#colnames(new_row) <- c("bird id","number of records")
record_table <- rbind(record_table, new_row)
}
colnames(record_table) <-  c("bird id","number of records")
(record_table)
bird_ids <- unique(vulture_dat$individual.local.identifier)
start_stop_table <- data.frame()
for(i in 1:length(bird_ids)){
current_bird <- bird_ids[i]
curr_records <- vulture_dat[vulture_dat$individual.local.identifier == current_bird,]
start_rec <- head(curr_records, n=1)$timestamp
stop_rec <- tail(curr_records, n=1)$timestamp
n_days <- round(as.numeric(difftime(ymd_hms(stop_rec), ymd_hms(start_rec),units = "days")),3)
new_row <- c(current_bird,start_rec, stop_rec, n_days)
start_stop_table <- rbind(start_stop_table, new_row)
}
colnames(start_stop_table) <-  c("bird id","start","stop","n days")
(start_stop_table)
#select bird 91
id <- 91
#subset whole dataset
vulture_91 <- vulture_dat[vulture_dat$individual.local.identifier == 91,]
plot(vulture_91$location.long, vulture_91$location.lat)
ggplot(vulture_91, aes(x=location.long, y=location.lat))+ geom_point()
vulture_91 <- vulture_dat %>%
filter(individual.local.identifier == 91)
head(vulture_91)
# check timestamp
class(vulture_91$timestamp)
# convert timestamp to posixct format
vulture_91$timestamp <- ymd_hms(vulture_91$timestamp, tz = "UTC")
head(vulture_91$timestamp)
str(vulture_91$timestamp)
# make track for vulture 91
trk_91 <- make_track(vulture_91, location.long,location.lat, timestamp, id = individual.local.identifier, crs = 4326)
# save this file to disk
saveRDS(trk_91, file = "../output/vulture_91_gps_data_track.rds")
# check sampling rate for bird 91
summarize_sampling_rate(trk_91)
# This suggests that the median sampling rate is 2h, but varying up to
# 12h. We can now resample the whole track to 2h interval (with tolerance of
# 10 min), so that if there are more than 2h between relocations, they will
# be divided into different bursts.
trk_91_resamp <- track_resample(trk_91, rate = minutes(1), tolerance = minutes(1490))
# add step length as a new col
trk_91_sl <- trk_91_resamp %>% mutate(sl = step_lengths(.))
# calculate steps by burst
trk_91_sbb <- trk_91_resamp %>% steps_by_burst()
source(".installpackages.R")
